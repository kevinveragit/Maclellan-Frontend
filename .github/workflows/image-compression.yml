name: Refresh Token, Compress, and Upload Images

on:
  push:
    branches:
      - main

jobs:
  compress-images:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Python and ImageMagick
      - name: Install Python and ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip imagemagick jq

      # Step 4: Refresh Dropbox Access Token
      - name: Refresh Dropbox Access Token
        id: refresh_token
        env:
          CLIENT_ID: ${{ secrets.DROPBOX_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.DROPBOX_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
        run: |
          response=$(curl -X POST https://api.dropboxapi.com/oauth2/token \
            --data "grant_type=refresh_token&refresh_token=$REFRESH_TOKEN&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET" \
            -H "Content-Type: application/x-www-form-urlencoded")
          
          ACCESS_TOKEN=$(echo $response | jq -r '.access_token')
          echo "::set-output name=access_token::$ACCESS_TOKEN"

      # Step 5: Download images from Dropbox using curl and debug response
      - name: Download images from Dropbox
        env:
          ACCESS_TOKEN: ${{ steps.refresh_token.outputs.access_token }}
        run: |
          mkdir -p downloaded_images
          echo "Listing files from Dropbox..."
          response=$(curl -X POST https://api.dropboxapi.com/2/files/list_folder \
            --header "Authorization: Bearer $ACCESS_TOKEN" \
            --header "Content-Type: application/json" \
            --data "{\"path\": \"/Kevin\", \"recursive\": true}")  # Set your path here (e.g., /Kevin)
          
          echo "Dropbox response: $response"  # Debug response from Dropbox
          
          echo "$response" | jq -r '.entries[] | select(.[".tag"] == "file") | .path_lower' \
          | while read -r path; do
              filename=$(basename "$path")
              echo "Downloading file $filename from Dropbox..."
              curl -X POST https://content.dropboxapi.com/2/files/download \
                --header "Authorization: Bearer $ACCESS_TOKEN" \
                --header "Dropbox-API-Arg: {\"path\": \"$path\"}" \
                -o "downloaded_images/$filename"
          done
      
      # Debug Step: Check if images were downloaded
      - name: List downloaded images
        run: ls -l downloaded_images

      # Step 6: Compress images using ImageMagick
      - name: Compress images
        run: |
          mkdir -p compressed_images
          for img in downloaded_images/*; do
            if file "$img" | grep -qE 'image|bitmap'; then
              echo "Compressing $img..."
              mogrify -path compressed_images -resize 50% "$img" || echo "Error processing $img, skipping..."
            else
              echo "Skipping non-image file $img"
            fi
          done

      # Debug Step: Check if images were compressed
      - name: List compressed images
        run: ls -l compressed_images

      # Step 7: Commit and push compressed images using PAT
      - name: Commit and push compressed images
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_TOKEN }}
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add compressed_images/
          git commit -m "Add compressed images" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.ACTIONS_DEPLOY_TOKEN }}@github.com/kevinveragit/MacLellan-Frontend.git
