name: Compress and Deploy Images

on:
  push:
    branches:
      - main
    paths:
      - 'images/**/*'  # Trigger on image file changes

jobs:
  compress-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dropbox CLI and Dependencies
      run: sudo apt-get install -y curl jq

    - name: Install ImageMagick for image compression
      run: sudo apt-get install imagemagick -y

    # Step 1: Refresh Dropbox Access Token
    - name: Refresh Dropbox Access Token
      id: refresh_token_step
      run: |
        TOKEN_REFRESH_URL="https://api.dropboxapi.com/oauth2/token"
        CLIENT_ID="${{ secrets.DROPBOX_CLIENT_ID }}"
        CLIENT_SECRET="${{ secrets.DROPBOX_CLIENT_SECRET }}"
        REFRESH_TOKEN="${{ secrets.DROPBOX_REFRESH_TOKEN }}"
        
        # Fetch a new access token using the refresh token
        ACCESS_TOKEN_RESPONSE=$(curl -X POST "$TOKEN_REFRESH_URL" \
          --header "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "grant_type=refresh_token" \
          --data-urlencode "refresh_token=$REFRESH_TOKEN" \
          --data-urlencode "client_id=$CLIENT_ID" \
          --data-urlencode "client_secret=$CLIENT_SECRET")

        # Extract the access token from the response
        ACCESS_TOKEN=$(echo "$ACCESS_TOKEN_RESPONSE" | jq -r .access_token)

        # Output the access token for use in later steps
        echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

    # Step 2: Fetch Images from Dropbox and Compress
    - name: Fetch images from Dropbox and compress
      run: |
        # Use the access token from the previous step
        ACCESS_TOKEN="${{ env.ACCESS_TOKEN }}"

        # Fetch and compress the images
        curl -X POST https://content.dropboxapi.com/2/files/download \
          --header "Authorization: Bearer $ACCESS_TOKEN" \
          --header "Dropbox-API-Arg: {\"path\": \"/your-dropbox-folder/full-quality-image.jpg\"}" \
          --output ./images/full-quality-image.jpg

        # Compress the image
        mogrify -resize 1920x1080 -quality 85 ./images/full-quality-image.jpg

    # Step 3: Commit and Push Compressed Images
    - name: Commit and push compressed images
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add images/
        git commit -m 'Add compressed images'
        git push
